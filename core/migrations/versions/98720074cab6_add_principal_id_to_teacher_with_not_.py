# """Add principal_id to Teacher with not null and default value

# Revision ID: 98720074cab6
# Revises: f87c876281f9
# Create Date: 2024-10-04 16:13:48.951022

# """
# from alembic import op
# import sqlalchemy as sa


# # revision identifiers, used by Alembic.
# revision = '98720074cab6'
# down_revision = 'f87c876281f9'
# branch_labels = None
# depends_on = None


# def upgrade():
#     # ### commands auto generated by Alembic - please adjust! ###
#     # op.alter_column('assignments', 'state',
#     #            existing_type=sa.VARCHAR(length=9),
#     #            nullable=False)
#     # op.create_foreign_key('fk_assignments_principal', 'assignments', 'principals', ['principal_id'], ['id'])
#     # op.drop_column('assignments', 'old_principal_id')
#     # op.add_column('teachers', sa.Column('principal_id', sa.Integer(), nullable=False, server_default='1'))
#     # op.create_foreign_key('fk_assignments_principal', 'teachers', 'principals', ['principal_id'], ['id'])
#     # Start a batch operation
#     with op.batch_alter_table('teachers') as batch_op:
#         batch_op.add_column(sa.Column('principal_id', sa.Integer(), nullable=False, server_default='1'))
    
#     # Create foreign key after adding the column
#     op.create_foreign_key('fk_assignments_principal', 'teachers', 'principals', ['principal_id'], ['id'])

#     # ### end Alembic commands ###


# def downgrade():
#     # ### commands auto generated by Alembic - please adjust! ###
#     # op.drop_constraint('fk_assignments_principal', 'teachers', type_='foreignkey')
#     # op.drop_column('teachers', 'principal_id')
#     # op.add_column('assignments', sa.Column('old_principal_id', sa.INTEGER(), server_default=sa.text("'1'"), nullable=False))
#     # op.drop_constraint('fk_assignments_principal', 'assignments', type_='foreignkey')
#     # op.alter_column('assignments', 'state',
#     #            existing_type=sa.VARCHAR(length=9),
#     #            nullable=True)
#     with op.batch_alter_table('teachers') as batch_op:
#         batch_op.drop_column('principal_id')
    
#     op.drop_constraint('fk_assignments_principal', 'teachers', type_='foreignkey')
#     # ### end Alembic commands ###




from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect


# revision identifiers, used by Alembic.
revision = '98720074cab6'
down_revision = 'f87c876281f9'
branch_labels = None
depends_on = None



def upgrade():
    # Set principal_id to 1 for all existing assignments
    op.execute("UPDATE teachers SET principal_id = 1")

def downgrade():
    # Optionally, you can define how to revert this change if needed
    # For example, if you want to set it back to NULL or some other value
    op.execute("UPDATE teachers SET principal_id = NULL")